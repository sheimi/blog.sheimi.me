// Generated by CoffeeScript 1.6.3
(function() {
  var filterPost,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  $(document).ready(function() {
    var url;
    url = location.href;
    filterPost(url);
    return $(document).on('click', '.cloud a', function(e) {
      var state, tag;
      e.preventDefault();
      url = $(this).attr('href');
      tag = filterPost(url);
      windowResize();
      if (tag) {
        state = {
          tag: "#" + tag,
          path: location.pathname,
          type: 'tags'
        };
        return history.pushState(state, null, "#" + tag);
      }
    });
  });

  filterPost = function(url) {
    var index, tag;
    index = url.indexOf('#');
    if (index === -1) {
      return;
    }
    tag = url.substr(index + 1);
    $('ul.posts li').each(function() {
      var hide, tags;
      tags = eval($(this).data('tags'));
      hide = $(this).hasClass('hide');
      if (__indexOf.call(tags, tag) >= 0) {
        return $(this).removeClass('hide');
      } else {
        return $(this).addClass('hide');
      }
    });
    $('.filter-result').html(tag);
    return tag;
  };

  $(window).on('popstate', function(e) {
    if (location.href.indexOf('tags' >= 0)) {
      return filterPost(location.href);
    }
  });

}).call(this);
